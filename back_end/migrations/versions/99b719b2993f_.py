"""empty message

Revision ID: 99b719b2993f
Revises: f9d0da54ad23
Create Date: 2023-03-01 18:42:43.866235

"""
from alembic import op
import sqlalchemy as sa
import geoalchemy2
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '99b719b2993f'
down_revision = 'f9d0da54ad23'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('idx_trips_destination', table_name='trips')
    op.drop_index('idx_trips_start_location', table_name='trips')
    op.drop_table('trips')
    op.drop_table('users')
    op.drop_table('racks')
    op.drop_index('idx_stations_location', table_name='stations')
    op.drop_table('stations')
    op.drop_table('areas')
    op.drop_table('cities')
    op.drop_index('idx_bikes_location', table_name='bikes')
    op.drop_table('bikes')
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('bikes',
    sa.Column('type', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='bikes_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_index('idx_bikes_location', 'bikes', ['location'], unique=False)
    op.create_table('cities',
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='cities_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('areas',
    sa.Column('city_id', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], name='areas_city_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='areas_pkey'),
    postgresql_ignore_search_path=False
    )
    op.create_table('stations',
    sa.Column('name', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('area_id', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('description', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('capacity', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('location', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['area_id'], ['areas.id'], name='stations_area_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='stations_pkey')
    )
    op.create_index('idx_stations_location', 'stations', ['location'], unique=False)
    op.create_table('racks',
    sa.Column('id', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name='racks_pkey')
    )
    op.create_table('users',
    sa.Column('email', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('password', sa.VARCHAR(length=128), autoincrement=False, nullable=False),
    sa.Column('first_name', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('last_name', sa.VARCHAR(length=128), autoincrement=False, nullable=True),
    sa.Column('phone_number', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('city_id', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['city_id'], ['cities.id'], name='users_city_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='users_pkey'),
    sa.UniqueConstraint('email', name='users_email_key'),
    postgresql_ignore_search_path=False
    )
    op.create_table('trips',
    sa.Column('duration', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('bike_id', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('start_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('end_time', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.Column('start_location', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=False),
    sa.Column('destination', geoalchemy2.types.Geometry(geometry_type='POINT', from_text='ST_GeomFromEWKT', name='geometry', _spatial_index_reflected=True), autoincrement=False, nullable=False),
    sa.Column('id', sa.VARCHAR(length=60), autoincrement=False, nullable=False),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['bike_id'], ['bikes.id'], name='trips_bike_id_fkey'),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name='trips_user_id_fkey'),
    sa.PrimaryKeyConstraint('id', name='trips_pkey')
    )
    op.create_index('idx_trips_start_location', 'trips', ['start_location'], unique=False)
    op.create_index('idx_trips_destination', 'trips', ['destination'], unique=False)
    # ### end Alembic commands ###
